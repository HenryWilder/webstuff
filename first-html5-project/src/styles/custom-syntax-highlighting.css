/* Tooltip container */
.tooltip {
    position: relative;
    display: inline-block;
}

/* Tooltip text */
.tooltip .tooltiptext {
    visibility: hidden;
    width: max-content;
    background-color: rgb(66,66,69);
    color: #fff;
    padding: 1ch 2ch;
    border-radius: 3px;
    border: 1px solid rgb(77,77,80);
    position: absolute;
    left: 0;
    top: 1rem;
    z-index: 1;
    cursor: default;
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none;
    box-shadow: -1px 2px 5px rgba(0,0,0,0.25);
    transition-delay: 0s;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
    visibility: visible;
    transition-delay: 0.5s;
}

.tooltiptext .declaration {
    text-shadow: 0 0 5px rgba(30,30,30, 0.5);
    line-height: 1.5rem;
    
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
}
.tooltiptext p {
    font-family: sans-serif;
    color: rgb(220,220,220);
}

/* Universal/default */
code {
    color: rgb(220,220,220);
    background-color: rgb(30,30,30);
    font-family: 'Consolas', monospace;
    display: block;
    border-radius: 0.5rem;
    border: 2px solid rgb(62,62,62);
    margin: 0.5rem;
    font-size: 10pt;
    cursor: text;
    tab-size: 8;
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
}
@media only screen {
    code {
        font-size: 13px;
    }
}
code .line {
    display: flex;
    flex-flow: row nowrap;
}
code::selection, code *::selection {
    background-color: rgba(51,153,255,0.5);
    background-color: rgb(25.5,76.5,127.5);
}
code .line-number {
    color: rgb(43,145,175);
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none;
    padding-left: 1rem;
    padding-right: 2rem;
    cursor: default;
}
code .comment { color: rgb(87,166,74) }
code .preprocessor { color: rgb(220,220,220) }
code .preprocessor.keyword { color: rgb(155,155,155) }
code .identifier { color: rgb(220,220,220) }
code .keyword { color: rgb(86,156,214) }
code .keyword-control { color: rgb(216,160,223) }
code .operator { color: rgb(180,180,180) }
code .operator-overloaded { color: rgb(220,220,170) }
code .punctuation { color: rgb(220,220,220) }
code .smart-tag { border: 1px dotted rgb(215,186,125); margin: -1px }
code .type { color: rgb(78,201,176) }
code .enum { color: rgb(184,215,163) }
code .literal { color: rgb(218,218,218) }
code .number { color: rgb(181,206,168) }
code .string { color: rgb(214,157,133) }
code .excluded-code { color: rgb(155,155,155) }
code .scope { border-left: 1px dotted rgb(220,220,220); }

/* C/C++ */
code.cpp .user-keyword, code .c .user-keyword { color: rgb(86,156,214) }
code.cpp .class-template { color: rgb(78,201,176) }
code.cpp .enumerator { color: rgb(184,215,163) }
code.cpp .field { color: rgb(218,218,218) }
code.cpp .function-template { color: rgb(220,220,170) }
code.cpp .function { color: rgb(220,220,170) }
code.cpp .keyword-control { color: rgb(216,160,223) }
code.cpp .label { color: rgb(200,200,200) }
code.cpp .local-variable { color: rgb(156,220,254) }
code.cpp .macro { color: rgb(190,183,255) }
code.cpp .member-function { color: rgb(220,220,170) }
code.cpp .member-operator-function { color: rgb(180,180,180) }
code.cpp .namespace { color: rgb(200,200,200) }
code.cpp .new-delete-operator-function { color: rgb(86,156,214) }
code.cpp .operator-function { color: rgb(180,180,180) }
code.cpp .parameter { color: rgb(154,154,154) }
code.cpp .property { color: rgb(200,200,200) }
code.cpp .static-field { color: rgb(200,200,200) }
code.cpp .static-member-function { color: rgb(220,220,170) }
code.cpp .string .delimiter-character { color: rgb(232,201,187) }
code.cpp .string .escape-character { color: rgb(255,214,143) }
code.cpp .user-defined-literal.number { color: rgb(181,206,168) }
code.cpp .user-defined-literal.raw { color: rgb(218,218,218) }
code.cpp .user-defined-literal.string { color: rgb(214,157,133) }
code.cpp .user-type { color: rgb(78,201,176) }
code.cpp .user-type.generic { color: rgb(78,201,176) }
code.cpp .user-type.reference { color: rgb(78,201,176) }
code.cpp .user-type.value { color: rgb(78,201,176) }
code.cpp .variable { color: rgb(200,200,200) }

/* CSS */
code .css .comment { color: rgb(87,166,74) }
code .css .keyword { color: rgb(86,156,214) }
code .css .property-name { color: rgb(156,220,254) }
code .css .property-value { color: rgb(200,200,200) }
code .css .selector { color: rgb(215,186,125) }
code .css .string { color: rgb(214,157,133) }

/* GLSL */
code .glsl .function { color: rgb(255,175,95) }
code .glsl .keyword { color: rgb(95,175,255) }
code .glsl .userkeyword1 { color: rgb(175,95,255) }
code .glsl .userkeyword2 { color: rgb(255,95,175) }
code .glsl .variable { color: rgb(95,255,255) }

/* HTML */
code .html .attribute-name { color: rgb(156,220,254) }
code .html .attribute-value { color: rgb(200,200,200) }
code .html .client-template-separator { color: rgb(220,220,220); font-weight: bold }
code .html .client-template-tag { color: rgb(0,100,0); font-weight: bold }
code .html .client-template-value { color: rgb(255,0,255) }
code .html .comment { color: rgb(87,166,74) }
code .html .element-name { color: rgb(86,156,214) }
code .html .entity { color: rgb(0,160,160) }
code .html .operator { color: rgb(180,180,180) }
code .html .razor-code-background { color: rgb(220,220,220); background-color: rgb(80,80,80) }
code .html .razor-tag-helper-attribute { color: rgb(0,128,128); font-weight: bold }
code .html .razor-tag-helper-element { color: rgb(0,128,128); font-weight: bold }
code .html .server-side-script { color: rgb(0,0,0); background-color: rgb(255,255,179) }
code .html .tag-delimiter { color: rgb(128,128,128) }

/* JSON */
code .json .property-name { color: rgb(215,185,125) }

/* Regex */
code .regex .alternation { color: rgb(5,195,186) }
code .regex .anchor { color: rgb(249,121,174) }
code .regex .character-class { color: rgb(46,171,254) }
code .regex .comment { color: rgb(87,166,74) }
code .regex .grouping { color: rgb(5,195,186) }
code .regex .other-escape { color: rgb(255,214,143) }
code .regex .quantifier { color: rgb(249,121,174) }
code .regex .self-escaped-character { color: rgb(214,157,133); font-weight: bold }
code .regex .text { color: rgb(214,157,133) }
